@use 'breakpoints.module' as breakpoints;

$maxWidth: breakpoints.$xl;
$minDeviceSize: breakpoints.$xs;
$remFactor: 10;

@mixin adaptive-font($pcSize, $mobSize, $baseLineHeight) {
  $addSize: $pcSize - $mobSize;
  $maxWidth: ($maxWidth - $minDeviceSize) / $remFactor;

  --adaptive-font-size: #{$mobSize}rem + #{$addSize} * ((
          100vw - #{$minDeviceSize / $remFactor}rem
        ) / #{$maxWidth});

  font-size: calc(var(--adaptive-font-size));
  line-height: calc(#{$baseLineHeight} / var(--adaptive-font-size) * 100%);
}

@mixin interactive-states(
  $hover-rules: (),
  $active-rules: (),
  $additional-focus-rules: (),
  $focus-outline: none,
  $focus-scale: 1.05
) {
  @media (hover: hover) {
    &:hover {
      @each $property, $value in $hover-rules {
        #{$property}: $value;
      }
    }
    &:active {
      @each $property, $value in $active-rules {
        #{$property}: $value;
      }
    }
  }
  @media (hover: none) {
    &:active {
      @each $property, $value in $hover-rules {
        #{$property}: $value;
      }
      @each $property, $value in $active-rules {
        #{$property}: $value;
      }
    }
  }
  &:focus,
  &:focus-visible {
    outline: $focus-outline;
    transform: scale($focus-scale);

    @each $property, $value in $additional-focus-rules {
      #{$property}: $value;
    }
  }
}
